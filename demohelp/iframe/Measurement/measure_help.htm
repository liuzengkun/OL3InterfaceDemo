<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
    <title>加载测量控件</title>
    <link href="../../css/helpstyle.css" rel="stylesheet" type="text/css" />
</head>
<body>
    <div class="biaoti">
        加载测量控件
    </div>
    <div class="xiaobiaoti">
        一、示例功能
    </div>
    <div class="zhengwen">
        该示例底图为一个OSM世界地图，实现了加载测量控件的功能。
    </div>
    <div class="xiaobiaoti">
        二、实现说明:
    </div>
    <div class="zhengwen">
        1、数据：使用一个OSM的世界地图。<br />
        <br />
        2、实现步骤：
        <br />
        <br />
        [地图显示]<br />
        <br />
        （1）先引入ol.js（ol是一个专为WebGIS客户端开发提供的JavaScript 类库包，用于实现标准格式发布的地图数据访问。OpenLayers 3对OpenLayers网络地图库进行了根本的重新设计。openlayer2虽然被广泛使用，但从JavaScript开发的早期发展阶段开始，已日益显示出它的落后。
        OL3已运用现代的设计模式从底层重写。）、ol.css（是地图样式文件，包含了地图样式的方方面面，例如，填充色、图标样式、图片样式、规则图形样式、边界样式、文字样式等，样式一般针对矢量要素图层。）；
        <br />
        <br />
        （2）再创建一个ID为“mapCon”的div层，并设置其样式；
        <br />
        <br />
        （3）然后在body标签里面编写地图显示的脚本，即初始化ol.Map()类和ol.layer.Tile()类，通过设置ol.Map类的view属性确定地图的显示中心和级别以及坐标系，再通过Map对象的addLayer方法加载Layer对象；
        <br />
        <br />
        （4）初始化ol.layer.Vector()类，用于加载测量的绘制矢量层，通过设置该类的style属性确定测量的绘制矢量层的样式；
        <br />
        <br />
        [加载测量控件方法实现]<br />
        <br />
        （5）通过ol.Map()类的on方法给当前的地图容器绑定鼠标移动事件；
        <br />
        <br />
        （6）初始化ol.interaction.Draw()类，通过map对象的addInteraction方法为地图容器加载交互绘制控件；
        <br />
        <br />
        （7）创建测量工具提示框和帮助提示框，通过map对象的addOverlay方法加载到地图容器中；
        <br />
        <br />
        （8）通过draw对象的on方法给当前的给交互绘制工具绑定开始绘制的事件和结束绘制的事件；
        <br />
        <br />
        （9）通过遍历坐标计算两点之前距离，进而得到整条线的长度；通过polygon对象的getArea()方法获取多边形的面积。
    </div>
    <div class="xiaobiaoti">
        三、功能类/参数说明
    </div>
    <div class="zhengwen">
        <font class="Class">1、ol.Map类：</font>该类是一个地图容器类<br />
        <br />
        <font class="constructorTile">1.1 构造函数：</font>
        <br />
        <div class="zhuji">
            <font class="constructor">ol.Map(options)</font><br />
            <br />
            <font class="paraDescription">参数说明：</font>
            <br />
            <font class="parameter">options：</font>（object类型）可选项，设置该对象其他属性，以键值对的形式设置。<br />
            <font class="nextParameter">【1】target：</font>（Element | string | undefined）可选项，指定地图所在的网页div元素的id，例如代码中：'mapCon'。如果在构建时未指定，则必须调用ol.Map()类的setTarget()方法以便绘制地图。<br />
            <font class="nextParameter">【2】layers：</font>（Array-[ol.layer.Base] | ol.Collection[ol.layer.Base | undefined]）可选项，指定加载的图层。如果未定义，则将呈现不包含图层的地图（图层是按提供的顺序呈现的，如果想要矢量图层显示在瓦片图层顶部，则必须位于瓦片图层之后）。<br />
            <font class="nextParameter">【3】view：</font>（ol.View | undefined）可选项，设置地图显示视图。如果在构建时未指定，则必须通过ol.Map()类的setView()方法指定，否则不会提取图层源。<br />
        </div>
        <font class="funDescription">1.2 方法说明：</font>
        <br />
        <div class="zhuji">
            <font class="functionName">addLayer(layer)：</font>将地图图层添加到地图容器中。<br />
            <font class="nextParameter">layer：</font>(ol.layer.Base）地图图层。<br />
            <font class="functionName">on(type, listener)：</font>为地图容器添加一个指定类型的事件监听。详细参数介绍如下：<br />
            <font class="nextParameter">type：</font>（string | Array.[string]）事件类型或事件类型的数组，常用事件监听类型有：<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'singleclick':</font>鼠标单击事件；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'dblclick':</font>鼠标双击事件；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'click':</font>鼠标点击事件；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'pointerdrag':</font>鼠标拖拽事件；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'pointermove':</font>鼠标移动事件；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'postcompose':</font>开始渲染事件；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'postrender':</font>渲染完成事件；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'precompose':</font>准备渲染，未开始渲染事件；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'moveend':</font>地图移动事件；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'change:size':</font>地图窗口发生变化就会触发，与我们常用的窗口resize接近；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'change:view':</font>地图view对象发生变化触发；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'change:target':</font>地图绑定的div发生更改时触发，如map.setTartget方法就会触发该事件；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'propertychange':</font>Map对象中任意的property值改变时触发；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'change:layerGroup':</font>地图图层增删时触发。<br />
            <font class="nextParameter">listener：</font>（function）事件监听回调函数。<br />
            <font class="functionName">getViewport：</font>将获取的要素设置为地图视图，返回值为ol.Viewport类型 。<br />
            <font class="functionName">addInteraction(interaction)：</font>添加地图交互。<br />
            <font class="nextParameter">interaction：</font>(ol.interaction.Interaction）添加的交互。<br />
            <font class="functionName">addOverlay(overlay)：</font>给地图添加固定在特定坐标的可见元素。<br />
            <font class="nextParameter">overlay：</font>(ol.Overlay）固定在特定坐标的可见元素。<br />
            <font class="functionName">getLayers()：</font>获取地图所有图层。<br />
            <font class="functionName">setView(view)：</font>设置地图视图。<br />
            <font class="nextParameter">view：</font>(ol.View）地图视图。<br />
            <font class="functionName">getView()：</font>获取地图视图。返回值为{ol.View}类。<br />
            <font class="functionName">removeLayer(layer)：</font>将图层从地图容器中移除。<br />
            <font class="nextParameter">layer：</font>(ol.layer.Base）地图图层。<br />
            <font class="functionName">render()：</font>请求地图渲染（下一帧动画）。<br />
            <font class="functionName">getEventPixel(event)：</font>获取相对于浏览器窗口的地图像素位置。<br />
            <font class="nextParameter">event：</font>(event）事件。<br />
        </div>
        <font class="Class">2、ol.layer.Tile类：</font>该类是一个瓦片图层类，用于显示瓦片资源。这些瓦片提供了预渲染，并且由特定分辨率的缩放级别组织的瓦片图片网格组成。<br />
        <br />
        <font class="constructorTile">2.1 构造函数：</font>
        <br />
        <div class="zhuji">
            <font class="constructor">ol.layer.Tile(options)</font><br />
            <br />
            <font class="paraDescription">参数说明：</font>
            <br />
            <font class="parameter">options：</font>（object类型）可选项，设置该对象其他属性，以键值对的形式设置。<br />
            <font class="nextParameter">【1】source：</font>（ol.source.Tile）必填项。为图层设置来源、服务地址。<br />
        </div>
        <font class="funDescription">2.2方法说明：</font>
        <br />
        <div class="zhuji">
            <font class="functionName">setVisible(visible)：</font>设置图层可见性。<br />
            <font class="nextParameter">visible：</font>(boolean)图层可见性。<br />
            <font class="functionName">getVisible()：</font>获取图层的可见性（true或false）。<br />
            <font class="functionName">setOpacity(opacity)：</font>设置图层透明度（取值范围0-1，0为完全透明，1为完全不透明）。<br />
            <font class="nextParameter">opacity</font>(number)图层透明度。<br />
            <font class="functionName">getOpacity()：</font>获取图层的透明度（取值范围0-1，0为完全透明，1为完全不透明）。<br />
        </div>
        <font class="Class">3、ol.source.OSM类：</font>OpenStreetMap瓦片图层资源。<br />
        <br />
        <font class="constructorTile">3.1 构造函数：</font>
        <br />
        <div class="zhuji">
            <font class="constructor">ol.source.OSM(opt_options)</font><br />
            <br />
            <font class="paraDescription">参数说明：</font>
            <br />
            <font class="parameter">opt_options：</font>（object类型）可选项，设置该图层的配置选项，以键值对的形式设置。<br />
            <font class="nextParameter">【1】cacheSize：</font>（number|undefined）可选项，设置缓存大小。<br />默认是2048。<br />
            <font class="nextParameter">【2】crossOrigin：</font>（null|string|undefined）可选项，设置加载瓦片的跨域属性。<br />默认是匿名的。<br />
            <font class="nextParameter">【3】maxZoom：</font>（number|undefined）可选项，设置最大放大级别。<br />默认是19。<br />
            <font class="nextParameter">【4】opaque：</font>（boolean|undefined）可选项，设置图层是否是不透明的。<br />默认是true。<br />
            <font class="nextParameter">【5】reprojectionErrorThreshold：</font>（number|undefined）可选项，设置重投影允许的最大误差（以像素为单位）。设置值越大，精度越低。<br />默认是0.5。<br />
            <font class="nextParameter">【6】tileLoadFunction：</font>（ol.TileLoadFunctionType|undefined  ）可选项，设置通过给定的URL加载瓦片的功能。<br />默认是function(imageTile, src) {imageTile.getImage().src = src; };<br />
            <font class="nextParameter">【7】url：</font>（string|undefined）可选项，设置url模板。<br />默认为https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png。<br />
            <font class="nextParameter">【8】wrapX：</font>（boolean|undefined）可选项，设置是否在地图水平坐标轴上重复。<br />默认是true。
        </div>
        <font class="Class">4、ol.View类：</font>该类是一个地图显示视图类。ol.View对象是地图初始化必备三要素之一，表示一个简单的二维视图的映射，主要控制地图与用户的交互，如进行缩放，调节分辨率、地图的旋转等。<br />
        <br />
        <font class="constructorTile">4.1 构造函数：</font>
        <br />
        <div class="zhuji">
            <font class="constructor">ol.View(opt_options)</font><br />
            <br />
            <font class="paraDescription">参数说明：</font>
            <br />
            <font class="parameter">opt_options：</font>（Object类型）可选项，设置该对象其他属性，以键值对的形式设置。<br />
            <font class="nextParameter">【1】center：</font>（ol.Coordinate|undefined）可选项，设置地图显示中心；<br />
            <font class="nextParameter">【2】zoom：</font>（number|undefined）可选项，设置地图的显示级数。<br />
            <font class="nextParameter">【3】minZoom：</font>（number|undefined）可选项，设置地图最小缩放级别，它与maxZoom(或minResolution)和zoomFactor一起使用，如果同时给出maxResolution,maxResolution优先级高于minZoom。<br />默认值为0。<br />
            <font class="nextParameter">【4】maxZoom：</font>（number|undefined）可选项，设置地图最大缩放级别，它与minZoom(或maxResolution)和zoomFactor一起使用，如果同时给出minResolution,minResolution优先级高于maxZoom。<br />默认值为28。<br />
            <font class="nextParameter">【5】rotation：</font>（number|undefined）可选项，设置初始视图的旋转弧度（顺时针方向)。<br />默认值为0。<br />
            <font class="nextParameter">【6】projection：</font>（ol.ProjectionLike）可选项，地图的投影坐标系。<br />默认为EPSG:3857，即墨卡托坐标系。<br />
        </div>
        <font class="funDescription">4.2 方法说明：</font>
        <br />
        <div class="zhuji">
            <font class="functionName">getZoom()：</font>获取当前地图视图缩放级别，如果当前视图分辨率未定义或分辨率未在约束值范围内，将返回undefined。返回值为{number|undefined}类型。<br />
            <font class="functionName">getCenter()：</font>获取当前地图视图中心。返回值为{ol.Coordinate|undefined}类型<br />
            <font class="functionName">getRotation()：</font>获取当前地图视图的旋转弧度。返回值为{number}类型。<br />
            <font class="functionName">setZoom(zoom)：</font>设置地图视图的缩放级别。<br />
            <font class="nextParameter">zoom：</font>(number）地图视图的缩放级别。<br />
            <font class="functionName">setCenter(center)：</font>设置地图视图的中心坐标。<br />
            <font class="nextParameter">center：</font>(ol.Coordinate | undefined）地图视图的中心坐标。<br />
            <font class="functionName">setRotation(rotation)：</font>设置当前地图视图的旋转弧度。返回值为{number}类型。<br />
            <font class="nextParameter">rotation：</font>(number)为地图视图设置新的旋转值。<br />
            <font class="functionName">getProjection()：</font>获取地图的投影坐标系统，返回值为一个ol.proj.Projection对象。<br />
        </div>
        <font class="Class">5、ol.source.Vector类：</font>矢量图层资源。<br />
        <br />
        <font class="constructorTile">5.1 构造函数：</font>
        <br />
        <div class="zhuji">
            <font class="constructor">ol.source.Vector(opt_options)</font><br />
            <br />
            <font class="paraDescription">参数说明：</font>
            <br />
            <font class="parameter">opt_options：</font>（object类型）可选项，设置该图层的配置选项，以键值对的形式设置。<br />
            <font class="nextParameter">【1】url：</font>（string | ol.FeatureUrlFunction | undefined）可选项，矢量图层数据的url。<br />
            <font class="nextParameter">【2】format：</font>（ol.format.Feature | undefined）可选项，url属性设置后，XHR方式加载要素使用的数据格式。<br />默认是未定义的。<br />&nbsp;&nbsp;注意：如果设置了url，format一定要设置，否则可以忽略。<br />
            <font class="nextParameter">【3】attribution：</font>（ol.AttributionLike | undefined）可选项，地图右下角的 logo 包含的内容。<br />
            <font class="nextParameter">【4】features：</font>（Array-[ol.feature] | ol.Collection-[ol.feature] | undefined）可选项，地理要素，从字符串读取的数据。<br />
            <font class="nextParameter">【5】loader：</font>（ol.FeatureLoader | undefined）可选项，加载要素使用的加载函数。<br />
            <font class="nextParameter">【6】logo：</font>（string | olx.LogoOptions | undefined）可选项，logo包含的内容。<br />
            <font class="nextParameter">【7】strategy：</font>（ol.LoadingStrategy | undefined）可选项，加载要素使用的策略。<br />默认是一次性加载所有要素。<br />
            <font class="nextParameter">【8】wrapX：</font>（boolean | undefined）可选项，是否在地图水平坐标轴上重复。<br />默认是 true。<br />
        </div>
        <font class="funDescription">5.2方法说明：</font><br />
        <div class="zhuji">
            <font class="functionName">addFeatures(features)：</font>将要素添加到矢量图层数据源中；<br />
            <font class="nextParameter">features：</font>(Array[ol.feature])]添加到矢量图层数据源中的要素。<br />
            <font class="functionName">setVisible(visible)：</font>设置矢量图层可见性。<br />
            <font class="nextParameter">visible：</font>(boolean)矢量图层可见性。<br />
        </div>
        <font class="Class">6、ol.layer.Vector类：</font>用于显示在客户端渲染的矢量数据。<br />
        <br />
        <font class="constructorTile">6.1 构造函数：</font>
        <br />
        <div class="zhuji">
            <font class="constructor">ol.layer.Vector(opt_options)</font><br />
            <br />
            <font class="paraDescription">参数说明：</font>
            <br />
            <font class="parameter">opt_options：</font>（object类型）可选项，设置该图层的配置选项，以键值对的形式设置。<br />
            <font class="nextParameter">【1】source：</font>（string）必选项，设置矢量图层数据来源。<br />
            <font class="nextParameter">【2】style：</font>（ol.style.Style | Array-[ol.style.style] | ol.StyleFunction | undefined）图层样式，一个ol.style.Style或者一个ol.style.Style数组，或者一个返回 ol.style.Style 的函数。<br />
        </div>
        <font class="funDescription">6.2 方法说明：</font>
        <br />
        <div class="zhuji">
            <font class="functionName">setSource(source)：</font>设置图层资源。<br />
            <font class="functionName">source(ol.source.Source)：</font>图层资源。<br />
            <font class="functionName">setMap(map)：</font>设置图层呈现在地图其他图层之上。<br />
            <font class="functionName">map(ol.Map)：</font>地图对象。<br />
            <font class="nextParameter">setZIndex(zindex)：</font>(event）设置图层的显示级数，用于图层显示顺序，级数大的图层在上层显示，级数小的图层在底层显示。<br />默认显示级数为0。<br />
            <font class="functionName">zindex：</font>(number)显示级数。<br />
            <font class="functionName">getZIndex()：</font>获取图层的显示级数。<br />
        </div>
        <font class="Class">7、ol.style.Style类：</font>控制地图样式，其包含了地图样式的方方面面，例如，填充色、图标样式、图片样式、规则图形样式、边界样式、文字样式等，样式一般针对矢量要素图层。矢量图层样式可以事先写好，写成静态的，矢量图层直接按照定义好的样式渲染，也可以动态使用样式的 set() 方法，但是要注意刷新矢量图层，重新渲染，否则动态样式不生效。<br />
        <br />
        <font class="constructorTile">7.1 构造函数：</font>
        <br />
        <div class="zhuji">
            <font class="constructor">ol.style.Style(opt_options)</font><br />
            <br />
            <font class="paraDescription">参数说明：</font>
            <br />
            <font class="parameter">opt_options：</font>（Object类型）可选项，设置该对象其他属性，以键值对的形式设置。<br />
            <font class="nextParameter">【1】geometry：</font>(string|ol.geom.Geometry|ol.StyleGeometryFunction)可选项，设置要素的属性或者要素或者一个返回地理要素的函数，用来渲染成相应的地理要素。<br />
            <font class="nextParameter">【2】fill：</font>(ol.style.Fill|undefined)可选项，设置矢量要素的填充样式。<br />
            <font class="nextParameter">【3】stroke：</font>(ol.style.Stroke|undefined)可选项，设置矢量要素的边界样式。<br />
            <font class="nextParameter">【4】image：</font>(ol.style.Image|undefined)可选项，设置矢量要素的图片样式。<br />
            <font class="nextParameter">【5】text：</font>(ol.style.Text|undefined)可选项，设置矢量要素的文字样式。<br />
            <font class="nextParameter">【6】zIndex：</font>(number|undefined)可选项，CSS中的zIndex，即叠置的层次，为数字类型。<br />
        </div>
        <font class="Class">8、ol.style.Fill类：</font>该类是设置矢量要素的填充样式。<br />
        <br />
        <font class="constructorTile">8.1 构造函数：</font>
        <br />
        <div class="zhuji">
            <font class="constructor">ol.style.Fill(opt_options)</font><br />
            <br />
            <font class="paraDescription">参数说明：</font>
            <br />
            <font class="parameter">opt_options：</font>（Object类型）可选项，设置该对象其他属性，以键值对的形式设置。<br />
            <font class="nextParameter">【1】color：</font>(ol.Color|ol.ColorLike类型)可选项，设置要素的填充颜色和透明度。格式为 [R, G, B, A]，分别代表 RGB 的三个分量，A 代表 alpha，即透明度（[0, 1] 区间内的值[透明―不透明]）。<br />
        </div>
        <font class="Class">9、ol.style.Stroke类：</font>该类是设置矢量要素的边界样式。<br />
        <br />
        <font class="constructorTile">9.1 构造函数：</font>
        <br />
        <div class="zhuji">
            <font class="constructor">ol.style.Stroke(opt_options)</font><br />
            <br />
            <font class="paraDescription">参数说明：</font>
            <br />
            <font class="parameter">opt_options：</font>（Object类型）可选项，设置该对象其他属性，以键值对的形式设置。<br />
            <font class="nextParameter">【1】color：</font>(ol.Color|ol.ColorLike类型)可选项，设置要素边界的颜色。<br />默认值是null,如果为空，画布渲染器将使用默认的黑色。<br />
            <font class="nextParameter">【2】lineCap：</font>(string|undefined类型)可选项，设置要素边界线端点样式。<br />默认值是round（圆形）（可能取值butt（截头）, round（圆形）或者square（正方形））<br />
            <font class="nextParameter">【3】lineDash：</font>(Array[number]类型)可选项，设置要素虚线样式。<br />默认值是undefined，即是实线。值越大，虚线越稀疏；值越小，虚线越密集。<b><br />&nbsp;&nbsp;注意：IE10及以下版本不支持此功能。</b><br />
            <font class="nextParameter">【4】lineJoin：</font>(string|undefined类型)可选项，设置边界线连接方式。<br />默认值是round(环形)（可能取值bevel(斜角), round(环形)或者miter（斜接））<br />
            <font class="nextParameter">【5】miterLimit：</font>(number|undefined类型)可选项，设置要素的斜接限制。<br />默认值是10。<br />
            <font class="nextParameter">【6】width：</font>(number|undefined类型)可选项，设置要素边界宽度。<br />
        </div>
        <font class="Class">10、ol.style.Circle类：</font>针对矢量要素设置圆形的样式。继承 ol.style.Image类。
        <br />
        <br />
        <font class="constructorTile">10.1 构造函数：</font>
        <br />
        <div class="zhuji">
            <font class="constructor">ol.style.Circle(opt_options)</font><br />
            <br />
            <font class="paraDescription">参数说明：</font>
            <br />
            <font class="parameter">opt_options：</font>（Object类型）可选项，设置该对象其他属性，以键值对的形式设置。<br />
            <font class="nextParameter">【1】radius：</font>（number）必选项，圆形半径。<br />
            <font class="nextParameter">【2】fill：</font>（ol.style.Fill）可选项，填充样式。<br />
            <font class="nextParameter">【3】stroke：</font>（ol.style.Stroke）可选项，边界线条样式。<br />
            <font class="nextParameter">【4】snapToPixel：</font>（boolean | undefined）可选项，设置图像像素是否贴紧。<br />默认值为true。<br />
            <font class="nextParameter">【5】atlasManager：</font>（ol.style.AtlasManager | undefined）可选项，圆形要素使用地图集管理。<br />默认情况是不使用的。<br />
        </div>
        <font class="Class">11、ol.Sphere类：</font>该类是描述球对象类
        <br />
        <br />
        <font class="constructorTile">11.1 构造函数：</font>
        <br />
        <div class="zhuji">
            <font class="constructor">ol.Sphere(radius)</font><br />
            <br />
            <font class="paraDescription">参数说明：</font>
            <br />
            <font class="parameter">radius：</font>（number类型）必须项，半径。<br />
        </div>
        <font class="Class">12、ol.Overlay：</font> 该类是描述固定在特定坐标的可见元素，因此移动地图（pan操作）和进行缩放，overlay 会与地图坐标相对位置不变，跟着地图移动。主要用途是在地图之上再覆盖一层，用以显示额外的可见元素，元素一般是HTML元素，可以将可见元素放置到地图的任意位置，形成地图上再浮动一层的效果。例如在地图上相应的坐标放置一个标志、标签，点击地图上某位置，在点击位置弹出弹出框就是利用了overlay。
        <br />
        <br />
        <font class="constructorTile">12.1 构造函数：</font>
        <br />
        <div class="zhuji">
            <font class="constructor">ol.Overlaye(options)</font><br />
            <br />
            <font class="paraDescription">参数说明：</font>
            <br />
            <font class="parameter">opt_options：</font>（Object类型）可选项，设置该对象其他属性，以键值对的形式设置。<br />
            <font class="nextParameter">【1】id：</font>（number | string | undefined）可选项，为对应的 overlay 设置一个 id，便于使用 ol.Map 的 getOverlayById 方法取得相应的 overlay；<br />
            <font class="nextParameter">【2】element：</font>（Element | undefined）可选项，overlay 包含的 DOM elemen；<br />
            <font class="nextParameter">【3】offset：</font>（Array.[number] | undefined）可选项，偏移量，像素为单位，overlay 相对于放置位置（position）的偏移量，正值分别向右和向下偏移。<br />默认值为[0, 0]；<br />
            <font class="nextParameter">【4】position：</font>（ol.Coordinate | undefined）可选项，在地图所在的坐标系框架下，overlay 放置的位置；<br />
            <font class="nextParameter">【5】positioning：</font>（ol.Overlay.Positioning | string | undefined）可选项，overlay 对于 position 的相对位置，可能的值包括 bottom-left、bottom-center、bottom-right 、center-left、center-center、center-right、top-left、top-center、top-right。<br />默认是 top-left，也就是 element 左上角与 position 重合；<br />
            <font class="nextParameter">【6】stopEvent：</font>（boolean | undefined）可选项，地图的事件传播是否停止。举例说明：当鼠标滚轮在地图上滚动时，会触发地图缩放事件，如果在 overlay 之上滚动滚轮，并不会触发缩放事件，如果想鼠标在 overlay 之上也支持缩放，那么将该属性设置为 false 即可。<br />默认是为true，即阻止传播；<br />
            <font class="nextParameter">【7】insertFirst：</font>（boolean | undefined）可选项，overlay 是否应该先添加到其所在的容器（container），当 stopEvent 设置为 true 时，overlay 和 openlayers 的控件（controls）是放于一个容器的，此时将 insertFirst 设置为 true ，overlay 会首先添加到容器，这样，overlay 默认在控件的下一层（CSS z-index），所以，当 stopEvent 和 insertFirst 都采用默认值时，overlay 默认在控件的下一层；。<br />
            <font class="nextParameter">【8】autoPan：</font>（boolean | undefined）可选项，当触发 overlay对象的setPosition 方法时触发，当 overlay 超出地图边界时，地图自动移动，以保证 overlay 全部可见；<br />
            <font class="nextParameter">【9】autoPanAnimation：</font>（olx.OverlayPanOptions | undefined ）可选项，设置 autoPan 的效果动画；<br />
            <font class="nextParameter">【10】autoPanMargin：</font>（number | undefined）可选项，地图自动平移时，地图边缘与 overlay 的留白（空隙），单位是像素。<br />默认是为20像素；。<br />
        </div>
        <font class="funDescription">12.2 方法说明：</font>
        <br />
        <div class="zhuji">
            <font class="functionName">setPosition(position)：</font>设置 position 属性。<br />
            <font class="functionName">position（ol.Coordinate | undefined）：</font>在地图所在的坐标系框架下，overlay 放置的位置。<br/>
            <font class="functionName">setOffset(offset)：</font>设置固定在特定坐标的可见元素的偏移。<br />
            <font class="functionName">offset（Array.[number]）：</font>偏移量。<br/>
        </div>
        <font class="Class">13、ol.interaction.Draw：</font> 该类是描述交互绘图功能类
        <br />
        <br />
        <font class="constructorTile">13.1 构造函数：</font>
        <br />
        <div class="zhuji">
            <font class="constructor">ol.interaction.Draw(options)</font><br />
            <br />
            <font class="paraDescription">参数说明：</font>
            <br />
            <font class="parameter">opt_options：</font>（Object类型）可选项，设置该对象其他属性，以键值对的形式设置。<br />
            <font class="nextParameter">【1】source：</font>（ol.source.Vector | undefined）必选项，表示勾绘的要素属于的数据集，这里是属于一个矢量图层 vector 的矢量数据集 source。这样勾绘的要素就会添加到 source 所属的矢量图层，我们才可以看到勾绘的结果 ；<br />
            <font class="nextParameter">【2】type：</font>（ol.geom.GeometryType）必选项，绘制的地理要素类型，ol.geom.GeometryType类型，包含 Point、 LineString、 Polygon、MultiPoint、MultiLineString 或者 MultiPolygon；；<br />
            <font class="nextParameter">【3】style：</font>（ol.style.Style | Array.[ol.style.style] | ol.StyleFunction | undefined）可选项，要素素描的样式；<br />
            <font class="nextParameter">【4】features：</font>（ol.Collection.[ol.feature] | undefined）可选项，绘制的要素的目标集合；<br />
            <font class="nextParameter">【5】maxPoints：</font>（number | undefined)可选项，表示绘制单个要素（面和线）最多的点数限制。<br />默认没有限制；<br />
            <font class="nextParameter">【6】minPoints：</font>（number | undefined）可选项，表示绘制单个要素（面和线）需要的最少点数。<br />面默认为 3，线默认为 2；<br />
            <font class="nextParameter">【7】snapTolerance：</font>（number | undefined）可选项，自动吸附完成点的像素距离，也就是说当鼠标位置距离闭合点小于该值设置的时候，会自动吸附到闭合点。<br />默认值为 12；<br />
            <font class="nextParameter">【8】geometryFunction：</font>（ol.DrawGeometryFunctionType | undefined）可选项，坐标更新函数；<br />
            <font class="nextParameter">【9】geometryName：</font>（string | undefined）可选项，绘制的 geometry 的名称；<br />
            <font class="nextParameter">【10】condition：</font>（ol.EventsConditionType | undefined）可选项，规定了什么情况下触发 draw 操作。<br />默认不需要特殊条件进行触发；<br />
            <font class="nextParameter">【11】freehandCondition：</font>（ol.EventsConditionType | undefined）可选项，规定什么情况下触发不用重复点击绘制模式，即拖拽鼠标就可以绘制图形的模式。<br />>默认情况下是按下 shift 按键，这种模式对于不容易绘制的曲线比较方便，而且释放 shift 情况下，如果没有完成绘制，可以继续使用点击绘制。<br />
            <font class="nextParameter">【12】wrapX：</font>（boolean | undefined）可选项，当地图水平显示多个相同位置时，是否显示多个勾绘任务。<br />默认为 false。<br />
        </div>
        <font class="funDescription">13.2 方法说明：</font>
        <br />
        <div class="zhuji">
            <font class="functionName">on(type, listener, opt_this)：</font>为交互绘图控件添加一个指定类型的事件监听。详细参数介绍如下：<br />
            <font class="nextParameter">type：</font>（string | Array.[string]）事件类型或事件类型的数组，常用事件监听类型有：<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'singleclick':</font>鼠标单击事件；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'dblclick':</font>鼠标双击事件；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'click':</font>鼠标点击事件；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'pointerdrag':</font>鼠标拖拽事件；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'pointermove':</font>鼠标移动事件；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'postcompose':</font>开始渲染事件；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'postrender':</font>渲染完成事件；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'precompose':</font>准备渲染，未开始渲染事件；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'moveend':</font>地图移动事件；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'change:size':</font>地图窗口发生变化就会触发，与我们常用的窗口resize接近；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'change:view':</font>地图view对象发生变化触发；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'change:target':</font>地图绑定的div发生更改时触发，如map.setTartget方法就会触发该事件；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'propertychange':</font>Map对象中任意的property值改变时触发；<br />
            <font class='nextParameter'>&nbsp;&nbsp;&nbsp;'change:layerGroup':</font>地图图层增删时触发。<br />
            <font class="nextParameter">listener：</font>（function）事件监听回调函数。<br />
            <font class="nextParameter">opt_this：</font>（Object类型）可选项，作为监听的对象。<br />
        </div>
        <font class="Class">14、ol.geom.LineString类：</font>该类是设置线几何类<br />
        <br />
        <font class="constructorTile">14.1 构造函数：</font>
        <br />
        <div class="zhuji">
            <font class="constructor">ol.geom.LineString类(coordinates, opt_layout)</font><br />
            <br />
            <font class="paraDescription">参数说明：</font>
            <br />
            <font class="parameter">coordinates：</font>（Array[ol.Coordinate]类型）可选项，定义线坐标。<br />
            <font class="parameter">opt_layout：</font>（ol.geom.GeometryLayout类型）可选项，设置布局。<br />
        </div>
        <font class="funDescription">14.2 方法说明：</font>
        <br />
        <div class="zhuji">
            <font class="functionName">getCoordinates()：</font>获取线的坐标，返回值为坐标。<br />
            <font class="functionName">getLength()：</font>获取投影面上的线长度。<br/>
            <font class="functionName">getLastCoordinate()：</font>获取几何体的最后一个坐标。<br />
        </div>
        <font class="Class">15、ol.proj类：</font>坐标系统定义和转换类<br />
        <br />
        <font class="funDescription">15.1方法说明：</font>
        <br />
        <div class="zhuji">
            <font class="functionName">ol.proj.transform(coordinate, source, destination)：</font>转换投影坐标系（返回一个新的投影坐标，但是不改变原始坐标）。<br />
            <font class="nextParameter">coordinate：</font>(ol.Coordinate)必选项，地理坐标，即用经度和纬度组成的二维数组。<br />
            <font class="nextParameter">source：</font>(ol.ProjectionLike)必选项，源投影坐标系。<br />
            <font class="nextParameter">destination：</font>(ol.ProjectionLike)必选项，目的投影坐标系。<br />
            <font class="functionName">ol.proj.get(projectionLike)：</font>获取坐标系信息。<br />
            <font class="nextParameter">projectionLike：</font>(ol.ProjectionLike)必选项，坐标系。例如代码中：EPSG:3857，即墨卡托坐标系。<br />
            <font class="functionName">ol.proj.fromLonLat(coordinate, opt_projection)：</font>将地理坐标转化为其他坐标。<br />
            <font class="nextParameter">coordinate：</font>(ol.Coordinate)必选项，地理坐标，即用经度和纬度组成的二维数组。<br />
            <font class="nextParameter">aopt_projection：</font>(ol.ProjectionLik)可选项，设置目的坐标系。<br />默认为墨卡托投影，即EPSG:3857。<br />
        </div>
        <font class="Class">16、ol.geom.Polygon类：</font>该类是设置一个多边形几何体类<br />
        <br />
        <font class="constructorTile">16.1 构造函数：</font>
        <br />
        <div class="zhuji">
            <font class="constructor">ol.geom.Polygon(coordinates, opt_layout)</font><br />
            <br />
            <font class="paraDescription">参数说明：</font>
            <br />
            <font class="parameter">coordinates：</font>（Array类型-[ol.Coordinate]）可选项，定义多边形的坐标。<br />
            <font class="parameter">opt_layout：</font>（ol.geom.GeometryLayout类型）可选项，设置布局。<br />
        </div>
        <font class="constructorTile">16.2 方法说明：</font>
        <br />
        <div class="zhuji">
            <font class="functionName">getInteriorPoint()</font>获取组成多边形几何体的几何点。返回值为{ol.geom.Point}类型。<br />
            <br />
            <font class="functionName">clone()</font>生成一个完整的几何体的副本，返回值为{ol.geom.Polygon}类型。<br />
            <br />
            <font class="functionName">transform(source, destination)</font>转换坐标参考系（源几何坐标系将被修改），如果不想修改源坐标系，可使用clone()方法将其备份。<br />
            <font class="nextParameter">source：</font>(ol.ProjectionLike)必选项，源投影坐标系。<br />
            <font class="nextParameter">destination：</font>(ol.ProjectionLike)必选项，目的投影坐标系。<br />
            <br />
            <font class="functionName">getLinearRing(index)</font>返回多边形几何体的第N条线环。如果超出给定范围，返回值为null。<br />
            <font class="nextParameter">index：</font>(number)必选项，索引号。<br />
            <br />
            <font class="functionName">getArea()</font>返回投影平面上多边形几何体的面积。<br />
            <br />
            <font class="functionName">fromExtent(extent)</font>该方法创建一个多边形矢量特性的呈现风格（使用XY的布局）。该方法的返回值是一个Polygon的几何类型<br />
            <font class="nextParameter">extent：</font>（ol.Extent类型）可选项，定义多边形的范围。<br />
            <br />
            <font class="functionName">ol.geom.Polygon.fromCircle(circle, opt_sides, opt_angle)</font>该方法通过圆矢量特性创建一个多边形矢量特性的呈现风格。该方法的返回值是一个Polygon的几何类型<br />
            <font class="nextParameter">circle：</font>（ol.geom.Circle类型）可选项，定义一个圆矢量特性。<br />
            <font class="nextParameter">opt_sides：</font>（number类型）可选项，设置多边形的边数。<br />默认值是32。正方形的边数为4。<br />
            <font class="nextParameter">opt_angle：</font>（number类型）可选项，设置第一个顶点的多边形角弧度。<br />默认值为0。<br />
        </div>
        <font class="Class">17、ol.geom.Point类：</font>该类是设置点几何类。<br />
        <br />
        <font class="constructorTile">17.1 构造函数：</font>
        <br />
        <div class="zhuji">
            <font class="constructor">ol.geom.Point(coordinates, opt_layout)</font><br />
            <br />
            <font class="paraDescription">参数说明：</font>
            <br />
            <font class="parameter">coordinates：</font>（ol.Coordinate类型）可选项，设置坐标。<br />
            <font class="parameter">opt_layout：</font>（ol.geom.GeometryLayout类型）可选项，设置布局。<br />
        </div>
        <font class="funDescription">17.2 方法说明：</font>
        <br />
        <div class="zhuji">
            <font class="functionName">getCoordinates()：</font>获取线的坐标，返回值为坐标。<br />
            <font class="functionName">getLength()：</font>获取投影面上的线长度。<br />
        </div>
        <p>
            <a href="http://openlayers.org/en/latest/apidoc/" alt="OpenLayers 3 API。"
               target="_blank">注：详细说明请参见OpenLayers3 API手册。</a>
        </p>
    </div>
</body>
</html>
