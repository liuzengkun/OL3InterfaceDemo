<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>网络分析（新版本接口）</title>
    <!--导入外部样式表-->
    <link href="../../css/style.css" rel="stylesheet" type="text/css" />
    <link href="../../libs/ol/ol.css" rel="stylesheet" type="text/css" />
    <!--导入外部easyui相关样式表-->
    <link rel="stylesheet" type="text/css" href="../../libs/jqueryEasyui/themes/default/easyui.css" />
    <link rel="stylesheet" type="text/css" href="../../libs/jqueryEasyui/themes/icon.css" />
    <link rel="stylesheet" type="text/css" href="../../libs/jqueryEasyui/themes/color.css" />
    <!--必要的脚本引用-->
    <script src="../../libs/jquery-1.11.2.min.js" type="text/javascript"></script>
    <script src="../../libs/ol/ol-debug.js" type="text/javascript"></script>
    <script src="../../libs/zondyClient.js" type="text/javascript"></script>
    <!--引入easyui相关脚本库-->
    <script src="../../libs/jqueryEasyui/jquery.easyui.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        var vectors;
        var map, vectorLayer;
        //路径分析服务类
        var netAnalyParam;
        //记录网络分析的是网标列表
        var netFlag;
        //存放分析后的线路
        var lineFeature;

        //地图初始化函数
        function init() {
            var extent = [114.42204, 38, 114.57798, 38.092545];
            var projection = new ol.proj.Projection({ units: ol.proj.Units.DEGREES, extent: extent, code: "EPSG:4326" });
            //初始化地图容器
            map = new ol.Map({
                target: "mapCon",
                view: new ol.View({
                    center: [114.5000, 38.0359],
                    zoom: 2,
                    projection: projection
                }),
                controls: [new ol.control.MousePosition()]
            });
            //初始化矢量图层对象
            vectorLayer = new Zondy.Map.Layer("MapGIS IGS VectorLayer", ["gdbp://MapGisLocal/sample/ds/网络分析/ncls/道路交通网"], {
                //矢量图层地图服务器ip
                ip: "develop.smaryun.com",
                //矢量图层地图服务端口
                port: "6163"
            });
            //将矢量图层加载到地图中
            map.addLayer(vectorLayer);
        };

        //执行路径分析
        function pathAnalysis() {
            netFlag = new Array();
            var dotVal = "114.44,38.06,114.56,38.03";
            netAnalyParam = new Zondy.Service.NetAnalysisExtent({
                ip: "develop.smaryun.com",
                port: "6163",
                netClsUrl: encodeURI("gdbp://MapGisLocal/sample/ds/网络分析/ncls/道路交通网"),
                //返回格式
                outFormat: 'JSON'
            });
            //网络类型：1/2:节点网标/线网标
            netAnalyParam.elementType = 2;
            //设置网标搜索半径
            netAnalyParam.nearDis = 0.01;
            netAnalyParam.addNetFlag(dotVal, addFlagSuccess);
        }

        function addFlagSuccess(data) {
            for (var i = 0; i < data.length; i++) {
                var netFlagTmp =
                {
                    elemID: data[i].elemID,
                    isFlag: true,
                    posDot: data[i].posDot,
                    posPerc: data[i].posPerc,
                    type: data[i].type
                };
                netFlag.push(netFlagTmp);
            }
            //执行路径分析
            initNetAnalysis();
        }


        function initNetAnalysis() {
            clearA();
            //显示进度条
            startPressBar();
            var netAnalyse = new Zondy.Object.NetAnalyse({
                //设置网络类URL
                netCls: "gdbp://MapGisLocal/sample/ds/网络分析/ncls/道路交通网",
                //指定感兴趣路径点坐标序列
                flagPosStr: netFlag,
                //设置障碍点的坐标序列
                barrierPosStr: [],
                //设置网络类某些属性字段为权值字段
                weight: ",,",
                //分析类型：用户自定义
                mode: 'UserMode',
                //生成报告时道路名称字段
                roadName: "POPNAME"
            });
            netAnalyParam.netAnalyse(netAnalyse, AnalysisSuccess);
        }

        //分析成功后的回调函数
        function AnalysisSuccess(data) {
            //停止进度条
            stopPressBar();
            if (data == null) {
                alert("分析失败！请检查参数！");
                return;
            }
            var points = new Array();
            for (var t = 0; t < data.dotsss.length; t++) {
                for (var i = 0; i < data.dotsss[t].length; i++) {
                    for (var j = 0; j < data.dotsss[t][i].length; j++) {
                        points.push([data.dotsss[t][i][j].X, data.dotsss[t][i][j].Y]);
                    }
                }
            }
            var resInfo = data.resInfo[0];
            //绘制路径
            $("#resultInfo").append(resInfo);
            $("#resultInfo").css("border", "1px solid #1ab394");
            drawPath(points);
        }

        //分析失败后的回调函数
        function AnalysisError() {
            //停止进度条
            stopPressBar();
            alert("路径分析失败，请检查参数！");
        }

        function drawPath(pathArr) {

            var pointArr = [];
            //循环创建一个存放坐标的数组
            for (var i = 0; i < pathArr.length; i++) {
                pointArr[i] = pathArr[i];
            }
            var features = new ol.Feature({
                geometry: new ol.geom.LineString(pointArr)
            });

            var source = new ol.source.Vector({
                features: [features],
                warpX: false
            });

            var vectors = new ol.layer.Vector({
                source: source,
                style: new ol.style.Style({
                    fill: new ol.style.Fill({
                        color: "rgba(227,151,30,0.5)"
                    }),
                    stroke: new ol.style.Stroke({
                        width: 4,
                        color: "rgba(227,151,30,0.8)"
                    }),
                    image: new ol.style.Circle({
                        radius: 7,
                        fill: new ol.style.Fill({
                            color: "rgba(227,151,30,0.5)"
                        })
                    })
                })
            });

            map.addLayer(vectors);
        }

        //清除客户端分析结果信息
        function clearA() {
            //停止进度条
            stopPressBar();
            if (map.getLayers().array_.length > 1) {
                for (var i = map.getLayers().array_.length - 1; i > 0; i--) {
                    map.removeLayer(map.getLayers().array_[i]);
                }
            }
            else
                return;
        }

        /*===========================================进度条===================================================*/
        //停止进度条
        function stopPressBar() {
            document.getElementById('preview').style.display = "none";
        }
        //开始进度条动画
        function startPressBar() {
            document.getElementById('preview').style.display = "";
        }
    </script>
</head>
<body onload="init()">
    <div id="preview" style="display: none; text-align: center; padding-top: 250px; font-weight: bold">
        <img src="../../libs/img/39-1.gif" alt='' /><br />
        <br />
        <span>正在进行网络分析，请稍候</span>
    </div>
    <div class="easyui-layout" id="easylayout" style="width: 100%; height: 600px;">
        <div data-options="region:'center'" style="width: 75%;">
            <div id="mapCon" style="height: 95%;">
            </div>
        </div>
        <div data-options="region:'east',title:'矢量图层显示样式',split:true" style="width: 25%;">
            <div id="toolspanel">
                <input type="button" class="ButtonLib" value="网络分析" onclick="pathAnalysis()" style="margin: 5px auto;
                display: block; padding: 6px 12px" />
                <div id="resultInfo" class="lineStyle" style="color: #1ab394; font-size: 12px; margin: 5px;">
                    分析结果：<br />
                </div>
            </div>
        </div>
    </div>
</body>
</html>
