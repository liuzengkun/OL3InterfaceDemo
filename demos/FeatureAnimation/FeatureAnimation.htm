<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>要素动画</title>
    <link href="../../libs/ol/ol.css" rel="stylesheet" type="text/css" />
    <script src="../../libs/ol/ol.js" type="text/javascript"></script>
</head>
<body>
    <div id="mapCon" style="width: 100%; height: 95%; position: absolute;">
    </div>
    <script type="text/javascript">
        var map = new ol.Map({
            layers: [
          new ol.layer.Tile({
              source: new ol.source.OSM({
                  wrapX: false
              })
          })
            ],
            controls: ol.control.defaults({
                attributionOptions: ({
                    collapsible: false
                })
            }),
            target: 'mapCon',
            view: new ol.View({
                center: [0, 0],
                zoom: 2
            })
        });

        var source = new ol.source.Vector({
            wrapX: false
        });
        var vector = new ol.layer.Vector({
            source: source
        });
        map.addLayer(vector);

        function addRandomFeature() {
            var x = Math.random() * 360 - 180;
            var y = Math.random() * 180 - 90;
            var geom = new ol.geom.Point(ol.proj.transform([x, y], 'EPSG:4326', 'EPSG:3857'));
            var feature = new ol.Feature(geom);
            source.addFeature(feature);
        }

        var duration = 3000;
        function flash(feature) {
            var start = new Date().getTime();
            var listenerKey;

            function animate(event) {
                var vectorContext = event.vectorContext;
                var frameState = event.frameState;
                var flashGeom = feature.getGeometry().clone();
                var elapsed = frameState.time - start;
                var elapsedRatio = elapsed / duration;
                //指定半径从5开始，到30结束
                var radius = ol.easing.easeOut(elapsedRatio) * 25 + 5;
                var opacity = ol.easing.easeOut(1 - elapsedRatio);

                var style = new ol.style.Style({
                    image: new ol.style.Circle({
                        radius: radius,
                        snapToPixel: false,
                        stroke: new ol.style.Stroke({
                            color: 'rgba(255, 0, 0, ' + opacity + ')',
                            width: 0.25 + opacity
                        })
                    })
                });

                vectorContext.setStyle(style);
                vectorContext.drawGeometry(flashGeom);
                if (elapsed > duration) {
                    ol.Observable.unByKey(listenerKey);
                    return;
                }
                //继续postcompose动画
                map.render();
            }
            listenerKey = map.on('postcompose', animate);
        }

        source.on('addfeature', function (e) {
            flash(e.feature);
        });

        window.setInterval(addRandomFeature, 1000);
    </script>
</body>
</html>
