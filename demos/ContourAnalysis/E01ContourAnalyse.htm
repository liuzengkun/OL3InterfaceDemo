<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>离散点生成等值线</title>
    <!--导入外部样式表-->
    <link href="../../css/style.css" rel="stylesheet" type="text/css" />
    <link href="../../libs/ol/ol.css" rel="stylesheet" type="text/css" />
    <!--必要的脚本引用-->
    <script src="../../libs/jquery-1.11.2.min.js" type="text/javascript"></script>
    <script src="../../libs/ol/ol-debug.js" type="text/javascript"></script>
    <script src="../../libs/zondyClient.js" type="text/javascript"></script>
    <script type="text/javascript">
        var map, vectorMapdoc, drawLayer;
        var obj;
        //根据当前时间生成的时间值，用于标志不同的简单要素类
        var time = null;
        //简单要素类的地址
        var GdbpTempStr = null;
        //区简单要素类
        var wp = null;
        //线简单要素类
        var wl = null;
        //点简单要素类
        var wt = null;
        //服务地址
        var SvrCfg =
        {
            ip: "develop.smaryun.com",
            port: "6163"
        };
        //等值线相关配置
        var JydzxDemo =
            {
                GDBSvrName: "MapGISLocal",
                GDBName: "OpenLayerVecterMap",
                User: "",
                Password: "",
                DsName: "ContourAnalyse",
                SRSName: ""
            };
        //地图初始化函数
        function init() {
            //初始化地图容器
            map = new ol.Map({
                target: "mapCon",
                view: new ol.View({
                    center: [12008196.042592192, 2719935.2144997073],
                    zoom: 6,
                    proection: "EPSG:3857"
                })
            });
            //初始化地图文档图层对象
            vectorMapdoc = new Zondy.Map.Doc("MapGIS IGS VectorMapdocLayer", "WorldMKTVector", {
                //矢量地图文档地图服务器ip
                ip: SvrCfg.ip,
                //矢量地图文档地图服务端口
                port: SvrCfg.port
            });
            //将地图文档图层加载到地图中
            map.addLayer(vectorMapdoc);
        }

        function contourAnalyseBtn() {
            //显示进度条
            startPressBar();

            var myDate = new Date();
            //定义起始和终点，中间有5条，生成步长t
            var t = parseInt((300 - 0) / 5 + 0.5);
            //获取系统时间
            time = getTime(myDate);

            GdbpTempStr = "gdbp://MapGisLocal/" + JydzxDemo.GDBName + "/ds/" + JydzxDemo.DsName + "/";
            wp = GdbpTempStr + "sfcls/ContourP_" + time;
            wl = GdbpTempStr + "sfcls/ContourL_" + time;
            wt = GdbpTempStr + "acls/ContourT_" + time;
            var layerName = "gdbp://" + JydzxDemo.GDBSvrName + "/" + JydzxDemo.GDBName + "/ds/" + JydzxDemo.DsName + "/sfcls/" + "离散点";
            //创建一个离散数据网格化参数类
            var mp = new Zondy.Object.ContourAnalyse.MeshingParam({
                SfClsURL: layerName,
                FieldName: "Rainfall",
                XCellNum: 400,
                Bound: null
            });
            var mpStr = JSON.stringify(mp);

            //创建一个平面等值线追踪所用到的注记参数类
            var cp = new Zondy.Object.ContourAnalyse.ContourParam();
            var zValues = new Array();

            for (var i = 0; i < t; i++) {
                var z = new Zondy.Object.ContourAnalyse.ContourZValue();
                z.ZValue = i * 5;
                z.LineInfo = new Zondy.Object.ContourAnalyse.CLineInfo();
                z.LineInfo.Color = i * parseInt(5) + 9;
                z.LineInfo.LinStyleID = 1;
                z.LineInfo.LinWidth = 0.02;
                z.RegInfo = new Zondy.Object.ContourAnalyse.CRegionInfo();
                z.RegInfo.FillColor = i * parseInt(5) + 4;
                z.RegInfo.FillMode = 0;
                z.RegInfo.PatID = 0;
                z.IsOutputNote = true;
                zValues.push(z);
            }

            cp.ZValues = zValues;
            var noteParam = new Zondy.Object.ContourAnalyse.ContourNoteParam();
            noteParam.MinDist = 0.1;
            cp.NoteParam = noteParam;
            var slopLineParam = new Zondy.Object.ContourAnalyse.SlopLineParam();
            cp.SlopLineParam = slopLineParam;
            cp.IsMakeNote = true;
            cp.IsMakeReg = true;
            var cpStr = JSON.stringify(cp);

            obj = {
                "linSfclsURL": wl,
                "regSfclsURL": wp,
                "annoClsURL": wt,
                "meshingParam": mpStr,
                "contourParam": cpStr
            };
            var param = [{ "Key": "linSfclsURL", "Value": obj.linSfclsURL }, { "Key": "regSfclsURL", "Value": obj.regSfclsURL }, { "Key": "annoClsURL", "Value": obj.annoClsURL }, { "Key": "meshingParam", "Value": obj.meshingParam }, { "Key": "contourParam", "Value": obj.contourParam }];
            ExecuteFlow("600320", param);
        }

        function ExecuteFlow(workFlowID, param) {
            var urlStr = "http://" + SvrCfg.ip + ":" + SvrCfg.port + "/igs/rest/mrfws/execute/" + workFlowID + "?f=json";
            var service = new Zondy.Service.HttpRequest();
            service.ajax(urlStr, param, onContourAnalyse, "POST");
        }
        function onContourAnalyse(data) {
            stopPressBar(); //停止进度条
            if (data != null && data.results != null && data.results[0].Value == '0') {
                //初始化矢量图层对象
                var vectorLayer = new Zondy.Map.Layer("等值线", [obj.linSfclsURL], {
                    ip: "develop.smaryun.com",
                    port: "6163",
                    isBaseLayer: false
                });
                var vectorArea = new Zondy.Map.Layer("等值面", [obj.regSfclsURL], {
                    ip: "develop.smaryun.com",
                    port: "6163",
                    isBaseLayer: false
                });
                //将最后的图层加载到地图中
                map.addLayer(vectorLayer);
                map.addLayer(vectorArea);
            }
        }

        /*===========================================进度条===================================================*/
        //停止进度条
        function stopPressBar() {
            document.getElementById('preview').style.display = "none";
        }
        //开始进度条动画
        function startPressBar() {
            document.getElementById('preview').style.display = "";
        }
        //获取系统的时间
        function getTime(myDate) {
            var year = myDate.getFullYear();
            var systime = year;
            var month = myDate.getMonth() + 1;
            if (month < 10)
                systime += "0";
            systime += "" + month;
            var day = myDate.getDate();
            if (day < 10)
                systime += "0";
            systime += "" + day;
            var hh = myDate.getHours();
            if (hh < 10)
                systime += "0";
            systime += "" + hh;
            var mm = myDate.getMinutes();
            if (mm < 10)
                systime += "0";
            systime += "" + mm;
            var ss = myDate.getSeconds();
            if (ss < 10)
                systime += "0";
            systime += "" + ss;
            return systime;
        }
    </script>
</head>
<body onload="init();">
    <div id="preview" style="display: none; text-align: center; padding-top: 250px; font-weight: bold">
        <img src="../../libs/img/39-1.gif" alt='' /><br />
        <br />
        <span>正在生成等值线，请稍候</span>
    </div>
    <div class="ToolLib">
        <input type="button" class="ButtonLib" value="执行等值线分析" onclick="contourAnalyseBtn()" />
    </div>
    <div id="mapCon">
    </div>
</body>
</html>
