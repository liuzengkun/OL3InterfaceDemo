<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>更新点要素（地图文档）示例</title>
    <!--导入外部样式表-->
    <link href="../../css/style.css" rel="stylesheet" type="text/css" />
    <link href="../../libs/ol/ol.css" rel="stylesheet" type="text/css" />
    <!--必要的脚本引用-->
    <script src="../../libs/jquery-1.11.2.min.js" type="text/javascript"></script>
    <script src="../../libs/ol/ol-debug.js" type="text/javascript"></script>
    <script src="../../libs/zondyClient.js" type="text/javascript"></script>
    <script type="text/javascript">
        var map, docLayer;
        //子图位置信息和子图号
        var pnt, symbolId;

        //地图初始化函数
        function init() {
            //初始化地图容器
            map = new ol.Map({
                target: "mapCon",
                view: new ol.View({
                    center: [0, 0],
                    zoom: 2,
                    projection: "EPSG:4326"
                })
            });
            //初始化地图文档图层对象
            docLayer = new Zondy.Map.Doc("MapGIS IGS VectorMapdocLayer", "WorldJWEdit", {
                ip: "develop.smaryun.com",
                port: "6163",
                isBaseLayer: true
            });
            //将地图文档图层加载到地图中
            map.addLayer(docLayer);
            //查询地图，获取活动图层所有要素列表
            initFeatureIds();
        }

        function updatePoint() {
            //获取当前选择的要素编号
            var featureIds = $("#featureID").find("option:selected").text();
            if (featureIds == "请选择要素") {
                alert("请先选择要素，再进行更新!");
                return;
            }

            if (pnt != null) {
                if (pnt[0] != null && pnt[1] != null) {
                    //创建一个点形状，描述点形状的几何信息
                    var gpoint = new Zondy.Object.GPoint(pnt[0], pnt[1]);

                    var fGeom = new Zondy.Object.FeatureGeometry({ PntGeom: [gpoint] });
                    //如果没有获取到子图符号，则直接返回
                    if (symbolId == null) {
                        alert("没有获取到待修改元素的子图符号！");
                        return;
                    }
                    var symID = symbolId + 1;

                    //设置添加点要素的图形参数信息
                    var pointInfo = new Zondy.Object.CPointInfo({ Angle: 0, Color: 1442, Space: 0, SymHeight: 12, SymID: symID, SymWidth: 12 });
                    //设置当前点要素的图形参数信息
                    var webGraphicInfo = new Zondy.Object.WebGraphicsInfo({ InfoType: 1, PntInfo: pointInfo });

                    //设置添加点要素的属性信息
                    var attValue = ['东京', '日本', 1.0];

                    //创建一个点要素
                    var newFeature = new Zondy.Object.Feature({ fGeom: fGeom, GraphicInfo: webGraphicInfo, AttValue: attValue });
                    //设置要素为点要素
                    newFeature.setFType(1);
                    newFeature.setFID(featureIds);

                    //创建一个点要素数据集
                    var featureSet = new Zondy.Object.FeatureSet();
                    featureSet.clear();
                    //设置属性结构
                    var cAttStruct = new Zondy.Object.CAttStruct({ FldName: ["Cname", "CNTRY_NAME", "POPULATION"], FldNumber: 3, FldType: ["string", "string", "double"] });
                    featureSet.AttStruct = cAttStruct;
                    //添加要素到要素数据集
                    featureSet.addFeature(newFeature);

                    //创建一个编辑服务类
                    var editService = new Zondy.Service.EditDocFeature("WorldJWEdit", 11, { ip: "develop.smaryun.com", port: "6163" });
                    editService.update(featureSet, onPntSuccess);
                }
            }

        }

        //修改点要素回调函数
        function onPntSuccess(rlt) {
            var result = rlt;
            if (result) {
                alert("修改点要素成功！");
                docLayer.refresh();
            } else {
                alert("修改点要素失败！");
            }
        }

        /*===========================以下代码为便于用户操作而添加，用于自动获取数据库中已存在的要素编号===========================*/
        var featureSelect;
        //查询地图，获取活动图层所有要素列表
        function initFeatureIds(maxIndex) {
            featureSelect = $("#featureID");
            $("<option value='请选择要素'>请选择要素</option>").appendTo(featureSelect);

            if (maxIndex != null && maxIndex == 1) {
                return;
            }

            //初始化查询结构对象，设置查询结构包含几何信息
            var queryStruct = new Zondy.Service.QueryFeatureStruct();
            //是否包含几何图形信息
            queryStruct.IncludeGeometry = true;
            //是否包含属性信息
            queryStruct.IncludeAttribute = true;
            //是否包含图形显示参数
            queryStruct.IncludeWebGraphic = true;
            //实例化查询参数对象
            var queryParam = new Zondy.Service.QueryParameter({
                resultFormat: "json",
                struct: queryStruct
            });
            //设置查询要素数目
            queryParam.recordNumber = 1000;
            //实例化地图文档查询服务对象
            var queryService = new Zondy.Service.QueryDocFeature(queryParam, "WorldJWEdit", 11, {
                ip: "develop.smaryun.com",
                port: "6163"
            });
            //执行查询操作，querySuccess为查询回调函数
            queryService.query(querySuccess);
        }

        var pntArr = new Array();
        var symbolArr = new Array();
        //查询成功回调
        function querySuccess(a) {
            if (a.SFEleArray != null) {
                if (a.SFEleArray.length == 0) {
                    alert("查询结果为空");
                }
                else {
                    for (var i = 0; i < a.SFEleArray.length; i++) {
                        var obj = a.SFEleArray[i];
                        $("<option value='" + i + "'>" + obj.FID + "</option>").appendTo(featureSelect);

                        //获取不同编号对应元素的外包络矩形及中心，用于跳转
                        var featureBound = obj.bound;
                        var x = 0, y = 0;
                        //计算外包矩形的中心点
                        x = featureBound.xmax != featureBound.xmin ? ((featureBound.xmax - featureBound.xmin) / 2 + featureBound.xmin) : featureBound.xmax;
                        y = featureBound.ymax != featureBound.ymin ? ((featureBound.ymax - featureBound.ymin) / 2 + featureBound.ymin) : featureBound.ymax;
                        pntArr.push([x, y]);

                        //获取子图符号
                        var webGraphic = obj.GraphicInfo;
                        if (webGraphic != null) {
                            if (webGraphic.PntInfo != null && webGraphic.PntInfo.SymID != null) {
                                symbolArr.push(webGraphic.PntInfo.SymID);
                            }
                        }

                    }
                } //if else(a.SFEleArray.length == 0)
            } //if (a.SFEleArray != null) 
            else {
                alert("当前地图未查到要素，请先运行对应的要素添加示例！");
            } //if else(a.SFEleArray != null) 
        }

        //选中某一个要素编号后触发的事件，用于进行要素定位，地图跳转
        function onSelect() {
            var index = $("#featureID").val();
            if (index == "请选择要素") {
                return;
            }
            pnt = pntArr[index];
            symbolId = symbolArr[index];
            //每修改一次子图符号，更新一下子图符号的缓存数组
            //这里出于执行效率问题，不采用更新一次符号库就重新查询子图符号信息的做法，而是直接变更缓存数组的值
            symbolArr[index] = symbolId + 1;
            var view = new ol.View({
                center:pnt,
                zoom:2,
                projection:"EPSG:4326"
            });
            map.setView(view);
        }
    </script>
</head>
<body onload="init()">
    <div class="ToolLib">
        请输入要更新的要素ID：<select id="featureID" onchange="onSelect()"></select>
        <input type="button" class="ButtonLib" value="更新点要素" onclick="updatePoint()" />
    </div>
    <div id="mapCon">
    </div>
</body>
</html>
