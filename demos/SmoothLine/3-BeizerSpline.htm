<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>三次Beizer样条</title>
    <!--导入外部样式表-->
    <link href="../../css/style.css" rel="stylesheet" type="text/css" />
    <link href="../../libs/ol/ol.css" rel="stylesheet" type="text/css" />
    <!--必要的脚本引用-->
    <script src="../../libs/jquery-1.11.2.min.js" type="text/javascript"></script>
    <script src="../../libs/ol/ol-debug.js" type="text/javascript"></script>
    <script src="../../libs/zondyClient.js" type="text/javascript"></script>
    <script type="text/javascript">
        var map, vectorMapdoc;
        var oldline, smoothlineLayer, oldLineSource;
        //光滑线
        var dataObject = [
                {
                    "x": 64.3026761440958,
                    "y": -13.3927768273516
                }, {
                    "x": 81.3250355929193,
                    "y": -8.44081771496663
                }, {
                    "x": 72.9827194,
                    "y": 7.0129852
                }, {
                    "x": 93.7049333738818,
                    "y": -2.86986371353349
                }, {
                    "x": 90,
                    "y": 13.6363636363636
                }, {
                    "x": 105.213348388672,
                    "y": 8.70024061203003
                }
        ];
        //地图初始化函数
        function init() {
            //初始化地图容器
            map = new ol.Map({
                target: "mapCon",
                view: new ol.View({
                    center: [0, 0],
                    zoom: 2,
                    projection: "EPSG:4326"
                })
            });
            //初始化地图文档图层对象
            vectorMapdoc = new Zondy.Map.Doc("MapGIS IGS VectorMapdocLayer", "WorldJWVector", {
                //矢量地图文档地图服务器ip
                ip: "develop.smaryun.com",
                //矢量地图文档地图服务端口
                port: "6163"
            });

            oldLineSource = new ol.source.Vector({
                wrapX: false
            });
            oldline = new ol.layer.Vector({
                source: oldLineSource,
                style: new ol.style.Style({
                    stroke: new ol.style.Stroke({
                        color: 'rgba(255,0,0,0.5)',
                        width: 3
                    })
                })
            });
            var linepoints = [];
            //将ZD的点几何转换成OpenLayers的点几何
            for (var i = 0; i < dataObject.length; i++) {
                var linepoint = [dataObject[i].x, dataObject[i].y];
                linepoints.push(linepoint);
            }
            //将ZD的点几何转换成OpenLayers的线几何
            var geomline = new ol.geom.LineString(linepoints);
            //由OpenLayers线几何构建要素
            var featureLine = new ol.Feature({
                geometry: geomline
            });
            oldLineSource.addFeatures([featureLine]);

            //将地图文档图层加载到地图中
            map.addLayer(vectorMapdoc);
            map.addLayer(oldline);
        }

        function smoothline() {
            clearA();
            //显示进度条
            startPressBar();
            var smooth = new Zondy.Service.Smooth({
                ip: "develop.smaryun.com",
                port: "6163",
                type: 2,
                step: 1
            }
            );
            smooth.execute(dataObject, onGetSuccess);
        }
        function onGetSuccess(data) {
            //停止进度条
            stopPressBar();
            //设置图层可见
            oldline.setVisible(false);

            smoothlineLayer = new ol.layer.Vector({
                style: new ol.style.Style({
                    stroke: new ol.style.Stroke({
                        width: 3,
                        color: 'rgba(0,255,0,0.5)'
                    })
                })
            });
            var pointsline = [];
            //将ZD的点几何转换成OpenLayers的点几何
            for (var j = 0; j < data.length; j++) {
                var pointline = [data[j].x, data[j].y];
                pointsline.push(pointline);
            }
            //将ZD的点几何转换成OpenLayers的线几何
            var linegeom = new ol.geom.LineString(pointsline);
            //由OpenLayers线几何构建要素
            var lineFeature = new ol.Feature({
                geometry: linegeom
            });

            var smoothlineSource = new ol.source.Vector({
                wrapX: false,
                features: [lineFeature]
            });
            //将要素添加到图层
            smoothlineLayer.setSource(smoothlineSource);
            //将要素添加到图层
            map.addLayer(smoothlineLayer);
        }

        //清除客户端查询结果信息
        function clearA() {
            //停止进度条
            stopPressBar();
            if (map.getLayers().array_.length > 1) {
                for (var i = map.getLayers().array_.length - 1; i > 0; i--) {
                    map.removeLayer(map.getLayers().array_[i]);
                }
            }
            else
                return;
        }
        /*===========================================进度条===================================================*/
        //停止进度条
        function stopPressBar() {
            document.getElementById('preview').style.display = "none";
        }
        //开始进度条动画
        function startPressBar() {
            document.getElementById('preview').style.display = "";
        }
    </script>
</head>
<body onload="init();">
    <div id="preview" style="display: none; text-align: center; padding-top: 250px; font-weight: bold">
        <img src="../../libs/img/39-1.gif" alt='' /><br />
        <br />
        <span>正在分析，请稍候</span>
    </div>
    <div class="ToolLib">
        <input type="button" id="smoothlineBtn" class="ButtonLib" value="二次样条" onclick="smoothline()" />
    </div>
    <!--地图显示-->
    <div id="mapCon">
    </div>
</body>
</html>
